db("study_finance").collection("stock_re").find({}).toArray()

db("study_finance").collection("stock_re").insertMany([
  { "symbol": "AAPL", "date": "2023-10-01", "price": 150.5, "volume": 10000 },
  { "symbol": "AAPL", "date": "2023-10-02", "price": 152.3, "volume": 12000 },
  { "symbol": "AAPL", "date": "2023-10-03", "price": 153.0, "volume": 11500 },
  { "symbol": "AAPL", "date": "2023-10-04", "price": 155.7, "volume": 13000 },
  { "symbol": "AAPL", "date": "2023-10-05", "price": 154.0, "volume": 12500 },
  { "symbol": "GOOGL", "date": "2023-10-01", "price": 2800, "volume": 5000 },
  { "symbol": "GOOGL", "date": "2023-10-02", "price": 2825.5, "volume": 5500 },
  { "symbol": "GOOGL", "date": "2023-10-03", "price": 2840, "volume": 6000 },
  { "symbol": "GOOGL", "date": "2023-10-04", "price": 2830, "volume": 4500 },
  { "symbol": "GOOGL", "date": "2023-10-05", "price": 2855, "volume": 7000 },
  { "symbol": "TSLA", "date": "2023-10-01", "price": 750, "volume": 8000 },
  { "symbol": "TSLA", "date": "2023-10-02", "price": 760, "volume": 8500 },
  { "symbol": "TSLA", "date": "2023-10-03", "price": 755, "volume": 9000 },
  { "symbol": "TSLA", "date": "2023-10-04", "price": 770, "volume": 9500 },
  { "symbol": "TSLA", "date": "2023-10-05", "price": 765, "volume": 9300 },
  { "symbol": "AMZN", "date": "2023-10-01", "price": 3300, "volume": 3000 },
  { "symbol": "AMZN", "date": "2023-10-02", "price": 3325, "volume": 3200 },
  { "symbol": "AMZN", "date": "2023-10-03", "price": 3340, "volume": 3100 },
  { "symbol": "AMZN", "date": "2023-10-04", "price": 3355, "volume": 3300 },
  { "symbol": "AMZN", "date": "2023-10-05", "price": 3360, "volume": 3500 },
  { "symbol": "MSFT", "date": "2023-10-01", "price": 290, "volume": 7000 },
  { "symbol": "MSFT", "date": "2023-10-02", "price": 295, "volume": 7500 },
  { "symbol": "MSFT", "date": "2023-10-03", "price": 292, "volume": 7700 },
  { "symbol": "MSFT", "date": "2023-10-04", "price": 298, "volume": 7200 },
  { "symbol": "MSFT", "date": "2023-10-05", "price": 299, "volume": 7800 },
  { "symbol": "NFLX", "date": "2023-10-01", "price": 650, "volume": 4500 },
  { "symbol": "NFLX", "date": "2023-10-02", "price": 660, "volume": 4700 },
  { "symbol": "NFLX", "date": "2023-10-03", "price": 655, "volume": 4400 },
  { "symbol": "NFLX", "date": "2023-10-04", "price": 670, "volume": 4800 },
  { "symbol": "NFLX", "date": "2023-10-05", "price": 665, "volume": 4900 },
  { "symbol": "META", "date": "2023-10-01", "price": 315, "volume": 6400 },
  { "symbol": "META", "date": "2023-10-02", "price": 320, "volume": 6600 },
  { "symbol": "META", "date": "2023-10-03", "price": 318, "volume": 6700 },
  { "symbol": "META", "date": "2023-10-04", "price": 325, "volume": 6800 },
  { "symbol": "META", "date": "2023-10-05", "price": 322, "volume": 6900 },
  { "symbol": "NVDA", "date": "2023-10-01", "price": 450, "volume": 5100 },
  { "symbol": "NVDA", "date": "2023-10-02", "price": 460, "volume": 5300 },
  { "symbol": "NVDA", "date": "2023-10-03", "price": 455, "volume": 5200 },
  { "symbol": "NVDA", "date": "2023-10-04", "price": 470, "volume": 5400 },
  { "symbol": "NVDA", "date": "2023-10-05", "price": 465, "volume": 5500 }
]
)

문제 1: 특정 주식 심볼로 시작하는 데이터 찾기
목표: symbol 필드가 "A"로 시작하는 문서를 검색합니다.
예상 답: "symbol"이 "AAPL"이나 "AMZN"인 문서들이 포함됩니다.

symbol = "A" -> {symbol : /^A/}

db("study_finance").collection("stock_re").find(
                                                    {symbol : /^A/}
                                                    ).toArray()

문제 2: 특정 날짜로 끝나는 데이터 찾기
목표: date 필드가 "2023-10-05"로 끝나는 문서를 모두 검색합니다.
힌트: date 필드에 해당하는 문자열이 날짜 형식으로 저장되어 있음을 가정합니다.

date = "2023-10-05" -> {date : /2023-10-05$/}

db('study_fianace').collection('stock_re').find(
                                                {date : /2023-10-05$/}
                                                ).toArray()


문제 3: 주가가 "5"로 끝나는 문서 찾기
목표: price 필드의 값이 "5"로 끝나는 문서를 검색합니다.
힌트: 정규표현식을 이용하여 price 필드의 끝자리가 특정 숫자로 끝나는 데이터를 찾을 수 있습니다.

문제 4: 특정 범위의 날짜를 가진 데이터 찾기
목표: date 필드가 "2023-10-01"에서 "2023-10-03" 사이에 해당하는 문서를 모두 검색합니다.
힌트: MongoDB에서는 날짜 형식의 데이터에 정규표현식을 활용해 원하는 패턴을 찾을 수 있습니다.

문제 5: 특정 문자열을 포함하는 주식 심볼 찾기
목표: symbol 필드에 "L"이 포함된 모든 문서를 검색합니다.
예상 답: symbol 필드에 "L"을 포함한 모든 주식 심볼이 결과로 나옵니다.

문제 6: 특정 범위의 날짜를 가진 데이터 찾기
목표: date 필드가 "03"일 해당하는 문서를 모두 검색합니다.

문제 7: 두 번째 날짜에 주가가 1000 이상인 주식 문서 찾기
목표: date 필드가 "02"일 이고, price가 1000 이상인 모든 문서를 검색합니다.
예상 답: 해당 날짜와 주가 조건을 동시에 만족하는 모든 문서가 검색됩니다.

문제 8: "O"로 끝나는 주식 심볼 찾기
목표: symbol 필드가 "O"로 끝나는 문서를 검색합니다.
예상 답: "O"로 끝나는 모든 주식 심볼이 결과로 나옵니다.
